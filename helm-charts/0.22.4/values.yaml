# /*
# |    Protect your secrets, protect your sensitive data.
# :    Explore VMware Secrets Manager docs at https://vsecm.com/
# </
# <>/  keep your secrets… secret
# >/
# <>/' Copyright 2023–present VMware Secrets Manager contributors.
# >/'  SPDX-License-Identifier: BSD-2-Clause
# */

global:
  deploySpire: true
  # possible options for baseImage (distroless, distroless-fips, photon, photon-fips)
  baseImage: distroless
  registry: vsecm
  logLevel: "7"
  images:
    safe:
      distrolessRepository: vsecm-ist-safe
      distrolessFipsRepository: vsecm-ist-fips-safe
      photonRepository: vsecm-photon-safe
      photonFipsRepository: vsecm-photon-fips-safe
      tag: 0.22.4
      pullPolicy: IfNotPresent
    sentinel:
      distrolessRepository: vsecm-ist-sentinel
      distrolessFipsRepository: vsecm-ist-fips-sentinel
      photonRepository: vsecm-photon-sentinel
      photonFipsRepository: vsecm-photon-fips-sentinel
      tag: 0.22.4
      pullPolicy: IfNotPresent
    spireAgent:
      repository: ghcr.io/spiffe/spire-agent
      tag: 1.8.7
      pullPolicy: IfNotPresent
    spiffeCsiDriver:
      repository: ghcr.io/spiffe/spiffe-csi-driver
      tag: 0.2.4
      pullPolicy: IfNotPresent
    nodeDriverRegistrar:
      repository: registry.k8s.io/sig-storage/csi-node-driver-registrar
      tag: v2.10.0
      pullPolicy: IfNotPresent
    spireServer:
      repository: ghcr.io/spiffe/spire-server
      tag: 1.8.7
      pullPolicy: IfNotPresent
    spireControllerManager:
      repository: ghcr.io/spiffe/spire-controller-manager
      tag: 0.4.1
      pullPolicy: IfNotPresent
  vsecm:
    namespace: vsecm-system
  spire:
    # The trust domain is the root of the SPIFFE ID hierarchy. It is used to
    # identify the trust domain of a workload. If you use anything other than
    # the default `vsecm.com`, you must also update the relevant environment
    # variables that does SPIFFE ID validation.
    #
    # To prevent accidental collisions (two trust domains select identical names),
    # operators are advised to select trust domain names which are highly likely
    # to be globally unique. Even though a trust domain name is not a DNS name,
    # using a registered domain name as a suffix of a trust domain name, when
    # available, will reduce chances of an accidental collision; for example,
    # if a trust domain operator owns the domain name `example.com`,
    # then using a trust domain name such as `apps.example.com` would likely
    # not produce a collision. When trust domain names are automatically generated
    # without operator input, randomly generating a unique name (such as a UUID)
    # is strongly advised.
    trustDomain: "vsecm.com"
    namespace: spire-system
    logLevel: DEBUG
    serverPort: 8081

  sentinelInitCommand:
    enabled: true

    #  Add any initialization command here, separated by a line with only "--"
    command: |
      sleep:1
      --

    #  Example:
    #  ––––––––
    #
    #  sleep:30000
    #  --
    #  w:k8s:keycloak-admin-secret
    #  n:smo-app
    #  s:gen:{"username":"admin-[a-z0-9]{6}","password":"[a-zA-Z0-9]{12}"}
    #  t:{"KEYCLOAK_ADMIN_USER":"{{.username}}","KEYCLOAK_ADMIN_PASSWORD":"{{.password}}"}
    #  --
    #  w:k8s:keycloak-db-secret
    #  n:smo-app
    #  s:gen:{"username":"admin-[a-z0-9]{6}","password":"[a-zA-Z0-9]{12}"}
    #  t:{"KEYCLOAK_DB_USER":"{{.username}}","KEYCLOAK_DB_PASSWORD":"{{.password}}"}
    #  --
    #  sleep:5000
    #  --
    #  w:keycloak
    #  n:default
    #  s:trigger-init
    #  --


podAnnotations: {}
