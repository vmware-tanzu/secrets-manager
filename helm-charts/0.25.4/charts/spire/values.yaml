# /*
# |    Protect your secrets, protect your sensitive data.
# :    Explore VMware Secrets Manager docs at https://vsecm.com/
# </
# <>/  keep your secrets... secret
# >/
# <>/' Copyright 2023-present VMware Secrets Manager contributors.
# >/'  SPDX-License-Identifier: BSD-2-Clause
# */

# -- replicaCount SPIRE server currently runs with a sqlite database.
# Scaling to multiple instances will not work until we use an external database.
replicaCount: 1

# -- Override it with an image pull secret that you need as follows:
# imagePullSecrets:
#  - name: my-registry-secret
imagePullSecrets: []

# -- The name override of the chart.
nameOverride: ""
# -- The fullname override of the chart.
fullnameOverride: ""

# -- Experimental settings.
experimental:
  # -- eventsBasedCache is known to significantly improve SPIRE Server
  # performance. It is set to `false` by default, just in case.
  eventsBasedCache: false

# -- Service details for the SPIRE Server.
service:
  # -- Service type.
  # Possible values are: ClusterIP, NodePort, LoadBalancer.
  # Defaults to `ClusterIP`.
  type: ClusterIP
  # -- Service port.
  port: 8081
  # -- Additional Service annotations.
  annotations: {}

# -- Service details for the SPIRE Server Bundle Endpoint.
# The bundle endpoint is typically used for federating 
bundleEndpoint:
  # -- Valid values are: ClusterIP, NodePort, LoadBalancer
  type: ClusterIP
  # -- The port that the bundle endpoint serves.
  port: 8443
  # -- Additional Service annotations.
  annotations: {}

# -- Service Account details for the SPIRE Server.
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using
  # the fullname template.
  name: ""

# -- SPIRE Agent settings.
spireAgent:
  # -- Annotations to add to the SPIRE Agent pod.
  annotations: 
    # -- Define a helm hook to make spire-agent daemonSet deploy after
    # spire-server statefulSet.
    "helm.sh/hook": post-install
    # -- Define the policy to delete the hook after it has succeeded.
    "helm.sh/hook-delete-policy": hook-succeeded

# -- These are the default resources suitable for a moderate SPIRE usage.
# Of course, it's best to do your own benchmarks and update these
# requests and limits to your production needs accordingly.
# That being said, as a rule of thumb, do not limit the CPU request
# on SPIRE Agent and SPIRE server. It's best to let them leverage
# the available excess CPU, if available.
resources:
  # -- SPIRE Server resource requests and limits.
  server:
    requests:
      memory: "1Gi"
      cpu: "100m"
  # -- SPIRE Agent resource requests and limits.
  agent:
    requests:
      memory: "512Mi"
      cpu: "50m"
  # -- SPIFFE CSI Driver resource requests and limits.
  spiffeCsiDriver:
    requests:
      memory: "128Mi"
      cpu: "50m"

# -- Autoscaling settings. Note that for autoscaling to work, you need to
# have a proper setup for the SPIRE Server database. Check out the official
# documentation for more information: https://spiffe.io/docs/latest/setup/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Persistence settings for the SPIRE Server.
data:
  # -- Persistence is disabled by default. You are recommended to provide a
  # persistent volume.
  persistent: false
  # -- Define the PVC if `persistent` is true.
  persistentVolumeClaim:
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 1Gi
