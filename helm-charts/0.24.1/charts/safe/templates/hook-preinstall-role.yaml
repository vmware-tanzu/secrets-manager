# /*
# |    Protect your secrets, protect your sensitive data.
# :    Explore VMware Secrets Manager docs at https://vsecm.com/
# </
# <>/  keep your secrets... secret
# >/
# <>/' Copyright 2023-present VMware Secrets Manager contributors.
# >/'  SPDX-License-Identifier: BSD-2-Clause
# */

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vsecm-secret-readwriter
#
# Creating a `ClusterRole` will make the role applicable to all namespaces
# within the cluster. This approach is easier to maintain, and still secure
# enough because VSecM Safe will talk only to the Secrets it knows about.
# Alternatively, you can create a `Role` for tighter control:
#
#   kind: Role
#   metadata:
#     name: vsecm-secret-readwriter
#     namespace: {{ .Values.global.vsecm.namespace }}
#
##

##
#
# It is not possible to implement a more granular regex-based
# access control using RBAC. See, for example:
# https://github.com/kubernetes/kubernetes/issues/93845
#
# Also, note that you will either need to specify one role for each
# namespace, or you will need to define a ClusterRole across the cluster.
# The former approach is tedious, yet more explicit, and more secure.
#
# If you are NOT planning to use Kubernetes Secrets to sync VSecM-Safe-generated
# secrets (i.e., you don't want to create secrets using the `k8s:` prefix in the
# workload names), then you can limit the scope of this role as follows:
#
#    rules
#    - apiGroups: [""]
#      resources: ["secrets"]
#      resourceNames: [{{ .Values.rootKeySecretName | quote }}]
#      verbs: ["get", "watch", "list", "update", "create"]
#
##

##
#
# This `rules` setting is for legacy support (see the above discussion):
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list", "update", "create"]
#
# This `rules` configuration is the recommended, more secure, way:
#
# rules:
#   - apiGroups: [""]
#     resources: ["secrets"]
#     resourceNames: [{{ .Values.rootKeySecretName | quote }}]
#     verbs: ["get", "watch", "list", "update", "create"]
#
#
##
  {{- with .Values.podAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
    "helm.sh/hook-weight": "2"
  {{- end }}
