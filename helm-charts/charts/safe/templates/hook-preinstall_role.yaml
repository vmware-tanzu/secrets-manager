apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-readwriter
#
# Creating a `ClusterRole` will make the role applicable to all namespaces
# within the cluster. This approach is easier to maintain, and still secure
# enough because Aegis Safe will talk only to the Secrets it knows about.
# Alternatively, you can create a `Role` for tighter control:
#
#   kind: Role
#   metadata:
#     name: secret-readwriter
#     namespace: {{ .Values.global.aegis.namespace }}
#
##

##
#
# It is not possible to implement a more granular regex-based
# access control using RBAC. See, for example:
# https://github.com/kubernetes/kubernetes/issues/93845
#
# Also, note that you will either need to specify one role for each
# namespace, or you will need to define a ClusterRole across the cluster.
# The former approach is tedious, yet more explicit, and more secure.
#
# If you are NOT planning to use Kubernetes Secrets to sync Aegis-Safe-generated
# secrets (i.e., if AEGIS_SAFE_USE_KUBERNETES_SECRETS is "false"), then
# you can limit the scope of this role as follows:
#
#    rules
#    - apiGroups: [""]
#      resources: ["secrets"]
#      resourceNames: [{{ .Values.ageKeySecretName | quote }}]
#      verbs: ["get", "watch", "list", "update"]
#
# When the above rule is defined and when AEGIS_SAFE_USE_KUBERNETES_SECRETS
# environment variable is either not set, or set to anything other than "true",
# then you can only consume Aegis-managed secrets through Aegis Safe API, either
# by using the Aegis SDK, or leveraging Aegis Sidecarâ€”which is the recommended
# way.
#
##

##
#
# This `rules` setting is for legacy support (see the above discussion):
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list", "update"]
#
# This `rules` configuration is the recommended, more secure, way:
#
# rules:
#   - apiGroups: [""]
#     resources: ["secrets"]
#     resourceNames: [{{ .Values.ageKeySecretName | quote }}]
#     verbs: ["get", "watch", "list", "update"]
#
#
##
  {{- with .Values.podAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
    "helm.sh/hook-weight": "2"
  {{- end }}
